# -*- python -*-
'''
xpybar – xmobar replacement written in python
Copyright © 2014, 2015, 2016, 2017, 2018  Mattias Andrée (maandree@kth.se)

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
'''

# A simple xpybar configuration that mixes linereading with a clock

import sys
import threading

from util import *

from plugins.clock import Clock


OUTPUT, HEIGHT, YPOS, TOP = 0, 12, 0, True

text = ''
clock_ = Clock(format = '%Y-(%m)%b-%d %T, %a w%V, %Z', sync_to = 0.5)

functions = [ lambda : text 
            , Clocked(clock_.read, 1)
            ]

pattern = '%s \0 %s'

start_ = start
def start():
    start_()
    
    def read_stdin():
        global text
        try:
            text = input()
        except:
            sys.exit(0)
        bar.invalidate()
    
    def update_per_clock():
        Clocked.update_all(functions)
        bar.invalidate()
    
    xasync(lambda : forever(read_stdin))
    xasync(lambda : clock_.continuous_sync(update_per_clock))


semaphore = threading.Semaphore()
def redraw():
    if semaphore.acquire(blocking = False):
        try:
            values = pattern % tuple(f() for f in functions)
            bar.partial_clear(0, bar.width, 10, 0, 2, values)
            bar.draw_coloured_splitted_text(0, bar.width, 10, 0, 2, values)
        finally:
            semaphore.release()

