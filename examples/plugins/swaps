# -*- python -*-
'''
xpybar – xmobar replacement written in python
Copyright © 2014, 2015, 2016  Mattias Andrée (maandree@member.fsf.org)

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
'''

# A xpybar configuration example testing the features of plugins.swaps

import time
import threading

from plugins.swaps import Swaps
from plugins.clock import Clock


OUTPUT, HEIGHT, YPOS, TOP = 0, 12, 24, True


clock = Clock(sync_to = Clock.SECONDS)

start_ = start
def start():
    start_()
    async(lambda : clock.continuous_sync(lambda : bar.invalidate()))


swaps_ = Swaps()
HEIGHT *= len(swaps_.swaps)
def redraw():
    def title_and_extend(swap):
        data = list(zip(swaps_.headers, swap))
        usage = int(swap[swaps_.header_map['Used']]) / int(swap[swaps_.header_map['Size']])
        usage = '%i%%' % int(usage * 100 + 0.5)
        data.append(('Usage', usage))
        return data
    text = '\n'.join(' │ '.join('%s: %s' % (h, v) for (h, v) in title_and_extend(swap)) for swap in swaps_.swaps)
    bar.clear()
    bar.draw_coloured_text(0, 10, 0, 2, text)

