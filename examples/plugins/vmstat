# -*- python -*-
'''
xpybar – xmobar replacement written in python
Copyright © 2014, 2015, 2016  Mattias Andrée (maandree@member.fsf.org)

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
'''

# A xpybar configuration example testing the features of plugins.alsa

import time
import threading

from plugins.vmstat import VMStat
from plugins.clock import Clock


OUTPUT, HEIGHT, YPOS, TOP = 0, 12, 24, True

SCROLL_UP = 4
SCROLL_DOWN = 5

clock = Clock(sync_to = 0.5 * Clock.SECONDS)

keys = VMStat().keys
index = 0

start_ = start
def start():
    start_()
    async(lambda : clock.continuous_sync(lambda : bar.invalidate()))

def redraw():
    text = '%s: %i' % (''.join(w[0].upper() + w[1:] for w in keys[index].split('_')), VMStat()[keys[index]])
    bar.clear()
    bar.draw_coloured_text(0, 10, 0, 2, text)

def unhandled_event(e):
    global index
    if isinstance(e, Xlib.protocol.event.ButtonPress):
        if e.detail == SCROLL_UP:
            index = min(index + 1, len(keys) - 1)
        elif e.detail == SCROLL_DOWN:
            index = max(index - 1, 0)
        bar.invalidate()

